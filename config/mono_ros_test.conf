
 ///////////////////////////////////////////////////////////////////////////
  // openSMILE configuration example for a simple wave (PCM) recorder //
 ///////////////////////////////////////////////////////////////////////////

 ;===== component manager configuration (= list of enabled components!) =====

[componentInstances:cComponentManager]
instance[dataMemory].type = cDataMemory
instance[portaudioSource].type = cPortaudioSource
instance[waveSink].type = cWaveSink
instance[frame].type=cFramer
instance[win].type=cWindower
instance[fft].type=cTransformFFT
instance[fftmag].type=cFFTmagphase
instance[csvsink].type=cCsvSink
instance[stringpub].type=cRosStringPub

printLevelStats = 5
nThreads = 1

// ============= component configuration sections begin here ==============


  ;;;; default (template) configuration section for component 'cPortaudioSource' ;;;;
[portaudioSource:cPortaudioSource]
writer.dmLevel = wave
monoMixdown = 0
 ; -1 is the default device
device = \cm[device{0}:portaudio device to use for recording, see -listDevices option]
listDevices = \cm[listDevices{0}:add -listDevices 1 to the command-line to see a list available of portaudio devices]
sampleRate = \cm[sampleRate{48000}:set the sampling rate in Hz for recording]
channels = \cm[channels{1}:set the number of audio channels to record]
nBits = 16
audioBuffersize_sec = 0.050000
buffersize_sec=2.0


  ;;;; default (template) configuration section for component 'cWaveSink' ;;;;
[waveSink:cWaveSink]
reader.dmLevel = wave
blocksize=500
filename = \cm[outputfile(O){output.wav}:name of output wave file]
sampleFormat = 16bit
 

 [frame:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames
frameSize = \cm[frameSize{0.0250}:Frame size in seconds]
frameStep = \cm[frameStep{0.010}:Frame step in seconds]
frameMode = fixed
frameCenterSpecial = left

[win:cWindower]
reader.dmLevel=frames
writer.dmLevel=winframes
 ; hamming window
winFunc = ham
 ; no gain
gain = 1.0
offset = 0

[fft:cTransformFFT]
reader.dmLevel=winframes
writer.dmLevel=fft

[fftmag:cFFTmagphase]
reader.dmLevel=fft
writer.dmLevel=lld
dBpsd = \cm[dB{0}: Flag to trigger the computation of the power spectral density in dB]

[csvsink:cCsvSink]
reader.dmLevel=lld
filename=\cm[output(O){spectrogram.csv}:output csv file]
append=0

[stringpub:cRosStringPub]
reader.dmLevel=fft

// ################### END OF openSMILE CONFIG FILE ######################

